/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyToken, MyTokenInterface } from "../MyToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "wrappedToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "CLOCK_MODE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20Votes.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "clock",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timepoint",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timepoint",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101806040523480156200001257600080fd5b5060405162002d3f38038062002d3f833981016040819052620000359162000363565b806040518060400160405280600781526020016626bcaa37b5b2b760c91b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b8152508160039080519060200190620000c5929190620002bd565b508051620000db906004906020840190620002bd565b505050620000f96005836200022360201b62000d391790919060201c565b610120526200011681600662000223602090811b62000d3917901c565b61014052815160208084019190912060e052815190820120610100524660a052620001a460e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c08190526001600160a01b038316141590506200020f5760405162461bcd60e51b815260206004820152601e60248201527f4552433230577261707065723a2063616e6e6f742073656c662077726170000060448201526064015b60405180910390fd5b6001600160a01b031661016052506200044c565b600060208351101562000243576200023b8362000277565b905062000271565b826200025a83620002ba60201b62000d701760201c565b81516200026b9260200190620002bd565b5060ff90505b92915050565b600080829050601f81511115620002a5578260405163305a27a960e01b815260040162000206919062000395565b8051620002b282620003ed565b179392505050565b90565b828054620002cb9062000415565b90600052602060002090601f016020900481019282620002ef57600085556200033a565b82601f106200030a57805160ff19168380011785556200033a565b828001600101855582156200033a579182015b828111156200033a5782518255916020019190600101906200031d565b50620003489291506200034c565b5090565b5b808211156200034857600081556001016200034d565b6000602082840312156200037657600080fd5b81516001600160a01b03811681146200038e57600080fd5b9392505050565b600060208083528351808285015260005b81811015620003c457858101830151858201604001528201620003a6565b81811115620003d7576000604083870101525b50601f01601f1916929092016040019392505050565b805160208083015191908110156200040f576000198160200360031b1b821691505b50919050565b600181811c908216806200042a57607f821691505b602082108114156200040f57634e487b7160e01b600052602260045260246000fd5b60805160a05160c05160e05161010051610120516101405161016051612878620004c7600039600081816103000152818161054901528181610605015261117701526000610814015260006107e9015260006112e7015260006112bf0152600061121a015260006112440152600061126e01526128786000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80636fcfff45116100f95780639ab24eb011610097578063c3cda52011610071578063c3cda52014610416578063d505accf14610429578063dd62ed3e1461043c578063f1127ed81461044f57600080fd5b80639ab24eb0146103dd578063a457c2d7146103f0578063a9059cbb1461040357600080fd5b806384b0196e116100d357806384b0196e146103885780638e539e8c146103a357806391ddadf4146103b657806395d89b41146103d557600080fd5b80636fcfff451461032457806370a082311461034c5780637ecebe001461037557600080fd5b80633644e515116101665780634bf5d7e9116101405780634bf5d7e91461029d578063587cde1e146102a55780635c19a95c146102e95780636f307dc3146102fe57600080fd5b80633644e5151461026f57806339509351146102775780633a46b1a81461028a57600080fd5b8063205c2878116101a2578063205c28781461021c57806323b872dd1461022f5780632f4f21e214610242578063313ce5671461025557600080fd5b806306fdde03146101c9578063095ea7b3146101e757806318160ddd1461020a575b600080fd5b6101d161048c565b6040516101de9190612442565b60405180910390f35b6101fa6101f536600461246c565b61051e565b60405190151581526020016101de565b6002545b6040519081526020016101de565b6101fa61022a36600461246c565b610538565b6101fa61023d366004612496565b610578565b6101fa61025036600461246c565b61059c565b61025d610636565b60405160ff90911681526020016101de565b61020e610645565b6101fa61028536600461246c565b61064f565b61020e61029836600461246c565b610671565b6101d16106f6565b6102d16102b33660046124d2565b6001600160a01b039081166000908152600960205260409020541690565b6040516001600160a01b0390911681526020016101de565b6102fc6102f73660046124d2565b61078e565b005b7f00000000000000000000000000000000000000000000000000000000000000006102d1565b6103376103323660046124d2565b61079b565b60405163ffffffff90911681526020016101de565b61020e61035a3660046124d2565b6001600160a01b031660009081526020819052604090205490565b61020e6103833660046124d2565b6107bd565b6103906107db565b6040516101de97969594939291906124ed565b61020e6103b1366004612583565b610864565b6103be6108cb565b60405165ffffffffffff90911681526020016101de565b6101d16108d6565b61020e6103eb3660046124d2565b6108e5565b6101fa6103fe36600461246c565b610967565b6101fa61041136600461246c565b6109e2565b6102fc6104243660046125ab565b6109f0565b6102fc610437366004612605565b610b26565b61020e61044a366004612672565b610c8a565b61046261045d3660046126a5565b610cb5565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016101de565b60606003805461049b906126e5565b80601f01602080910402602001604051908101604052809291908181526020018280546104c7906126e5565b80156105145780601f106104e957610100808354040283529160200191610514565b820191906000526020600020905b8154815290600101906020018083116104f757829003601f168201915b5050505050905090565b60003361052c818585610d73565b60019150505b92915050565b60006105443383610e97565b61056f7f00000000000000000000000000000000000000000000000000000000000000008484610ea5565b50600192915050565b600033610586858285610f0d565b610591858585610f87565b506001949350505050565b600033308114156106005760405162461bcd60e51b815260206004820152602360248201527f4552433230577261707065723a20777261707065722063616e2774206465706f6044820152621cda5d60ea1b60648201526084015b60405180910390fd5b61062c7f0000000000000000000000000000000000000000000000000000000000000000823086611131565b61052c8484611169565b6000610640611173565b905090565b600061064061120d565b60003361052c8185856106628383610c8a565b61066c9190612730565b610d73565b600061067b6108cb565b65ffffffffffff1682106106cd5760405162461bcd60e51b815260206004820152601960248201527804552433230566f7465733a20667574757265206c6f6f6b757603c1b60448201526064016105f7565b6001600160a01b0383166000908152600a602052604090206106ef9083611338565b9392505050565b6060436107016108cb565b65ffffffffffff16146107565760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a2062726f6b656e20636c6f636b206d6f646500000060448201526064016105f7565b5060408051808201909152601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b6107983382611421565b50565b6001600160a01b0381166000908152600a60205260408120546105329061149a565b6001600160a01b038116600090815260076020526040812054610532565b60006060808280808361080f7f00000000000000000000000000000000000000000000000000000000000000006005611503565b61083a7f00000000000000000000000000000000000000000000000000000000000000006006611503565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b600061086e6108cb565b65ffffffffffff1682106108c05760405162461bcd60e51b815260206004820152601960248201527804552433230566f7465733a20667574757265206c6f6f6b757603c1b60448201526064016105f7565b610532600b83611338565b6000610640436115a7565b60606004805461049b906126e5565b6001600160a01b0381166000908152600a60205260408120548015610954576001600160a01b0383166000908152600a602052604090208054600019830190811061093257610932612748565b60009182526020909120015464010000000090046001600160e01b0316610957565b60005b6001600160e01b03169392505050565b600033816109758286610c8a565b9050838110156109d55760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105f7565b6105918286868403610d73565b60003361052c818585610f87565b83421115610a405760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016105f7565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610aba90610ab29060a0016040516020818303038152906040528051906020012061160e565b85858561163b565b9050610ac581611665565b8614610b135760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e63650000000000000060448201526064016105f7565b610b1d8188611421565b50505050505050565b83421115610b765760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016105f7565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610ba58c611665565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610c008261160e565b90506000610c108287878761163b565b9050896001600160a01b0316816001600160a01b031614610c735760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016105f7565b610c7e8a8a8a610d73565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600a60205260409020805463ffffffff8416908110610cf957610cf9612748565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b6000602083511015610d5557610d4e8361168d565b9050610532565b82828151610d66926020019061235a565b5060ff9050610532565b90565b6001600160a01b038316610dd55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105f7565b6001600160a01b038216610e365760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105f7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b610ea182826116cb565b5050565b6040516001600160a01b038316602482015260448101829052610f0890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526116e3565b505050565b6000610f198484610c8a565b90506000198114610f815781811015610f745760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105f7565b610f818484848403610d73565b50505050565b6001600160a01b038316610feb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105f7565b6001600160a01b03821661104d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105f7565b6001600160a01b038316600090815260208190526040902054818110156110c55760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105f7565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610f818484846117b8565b6040516001600160a01b0380851660248301528316604482015260648101829052610f819085906323b872dd60e01b90608401610ed1565b610ea182826117c3565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156111ce57600080fd5b505afa9250505080156111fe575060408051601f3d908101601f191682019092526111fb9181019061275e565b60015b6112085750601290565b919050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561126657507f000000000000000000000000000000000000000000000000000000000000000046145b1561129057507f000000000000000000000000000000000000000000000000000000000000000090565b610640604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b8154600090818160058111156113925760006113538461184d565b61135d908561277b565b600088815260209020909150869082015463ffffffff16111561138257809150611390565b61138d816001612730565b92505b505b808210156113df5760006113a68383611932565b600088815260209020909150869082015463ffffffff1611156113cb578091506113d9565b6113d6816001612730565b92505b50611392565b801561140b576000868152602090208101600019015464010000000090046001600160e01b031661140e565b60005b6001600160e01b03169695505050505050565b6001600160a01b038281166000818152600960208181526040808420805485845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610f8182848361194d565b600063ffffffff8211156114ff5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016105f7565b5090565b606060ff831461151657610d4e83611a8a565b818054611522906126e5565b80601f016020809104026020016040519081016040528092919081815260200182805461154e906126e5565b801561159b5780601f106115705761010080835404028352916020019161159b565b820191906000526020600020905b81548152906001019060200180831161157e57829003601f168201915b50505050509050610532565b600065ffffffffffff8211156114ff5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b60648201526084016105f7565b600061053261161b61120d565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600061164c87878787611ac9565b9150915061165981611b8d565b5090505b949350505050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b600080829050601f815111156116b8578260405163305a27a960e01b81526004016105f79190612442565b80516116c382612792565b179392505050565b6116d58282611cdb565b610f81600b611e1483611e20565b6000611738826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611f959092919063ffffffff16565b905080516000148061175957508080602001905181019061175991906127b6565b610f085760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105f7565b610f08838383611fa4565b6117cd8282611fd6565b6002546001600160e01b03101561183f5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084016105f7565b610f81600b61209d83611e20565b60008161185c57506000919050565b60006001611869846120a9565b901c6001901b90506001818481611882576118826127d8565b048201901c9050600181848161189a5761189a6127d8565b048201901c905060018184816118b2576118b26127d8565b048201901c905060018184816118ca576118ca6127d8565b048201901c905060018184816118e2576118e26127d8565b048201901c905060018184816118fa576118fa6127d8565b048201901c90506001818481611912576119126127d8565b048201901c90506106ef8182858161192c5761192c6127d8565b0461213d565b600061194160028484186127ee565b6106ef90848416612730565b816001600160a01b0316836001600160a01b03161415801561196f5750600081115b15610f08576001600160a01b038316156119fd576001600160a01b0383166000908152600a6020526040812081906119aa90611e1485611e20565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516119f2929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610f08576001600160a01b0382166000908152600a602052604081208190611a339061209d85611e20565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611a7b929190918252602082015260400190565b60405180910390a25050505050565b60606000611a9783612153565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611b005750600090506003611b84565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611b54573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611b7d57600060019250925050611b84565b9150600090505b94509492505050565b6000816004811115611ba157611ba1612810565b1415611baa5750565b6001816004811115611bbe57611bbe612810565b1415611c0c5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105f7565b6002816004811115611c2057611c20612810565b1415611c6e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105f7565b6003816004811115611c8257611c82612810565b14156107985760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105f7565b6001600160a01b038216611d3b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105f7565b6001600160a01b03821660009081526020819052604090205481811015611daf5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105f7565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610f08836000846117b8565b60006106ef828461277b565b82546000908190818115611e6d5760008781526020902082016000190160408051808201909152905463ffffffff8116825264010000000090046001600160e01b03166020820152611e82565b60408051808201909152600080825260208201525b905080602001516001600160e01b03169350611ea284868863ffffffff16565b9250600082118015611ecc5750611eb76108cb565b65ffffffffffff16816000015163ffffffff16145b15611f1157611eda8361217b565b60008881526020902083016000190180546001600160e01b03929092166401000000000263ffffffff909216919091179055611f8b565b866040518060400160405280611f35611f286108cb565b65ffffffffffff1661149a565b63ffffffff168152602001611f498661217b565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b606061165d84846000856121e4565b6001600160a01b03838116600090815260096020526040808220548584168352912054610f089291821691168361194d565b6001600160a01b03821661202c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105f7565b806002600082825461203e9190612730565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610ea1600083836117b8565b60006106ef8284612730565b600080608083901c156120be57608092831c92015b604083901c156120d057604092831c92015b602083901c156120e257602092831c92015b601083901c156120f457601092831c92015b600883901c1561210657600892831c92015b600483901c1561211857600492831c92015b600283901c1561212a57600292831c92015b600183901c156105325760010192915050565b600081831061214c57816106ef565b5090919050565b600060ff8216601f81111561053257604051632cd44ac360e21b815260040160405180910390fd5b60006001600160e01b038211156114ff5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016105f7565b6060824710156122455760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105f7565b600080866001600160a01b031685876040516122619190612826565b60006040518083038185875af1925050503d806000811461229e576040519150601f19603f3d011682016040523d82523d6000602084013e6122a3565b606091505b50915091506122b4878383876122bf565b979650505050505050565b6060831561232b578251612324576001600160a01b0385163b6123245760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105f7565b508161165d565b61165d83838151156123405781518083602001fd5b8060405162461bcd60e51b81526004016105f79190612442565b828054612366906126e5565b90600052602060002090601f01602090048101928261238857600085556123ce565b82601f106123a157805160ff19168380011785556123ce565b828001600101855582156123ce579182015b828111156123ce5782518255916020019190600101906123b3565b506114ff9291505b808211156114ff57600081556001016123d6565b60005b838110156124055781810151838201526020016123ed565b83811115610f815750506000910152565b6000815180845261242e8160208601602086016123ea565b601f01601f19169290920160200192915050565b6020815260006106ef6020830184612416565b80356001600160a01b038116811461120857600080fd5b6000806040838503121561247f57600080fd5b61248883612455565b946020939093013593505050565b6000806000606084860312156124ab57600080fd5b6124b484612455565b92506124c260208501612455565b9150604084013590509250925092565b6000602082840312156124e457600080fd5b6106ef82612455565b60ff60f81b881681526000602060e08184015261250d60e084018a612416565b838103604085015261251f818a612416565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b8181101561257157835183529284019291840191600101612555565b50909c9b505050505050505050505050565b60006020828403121561259557600080fd5b5035919050565b60ff8116811461079857600080fd5b60008060008060008060c087890312156125c457600080fd5b6125cd87612455565b9550602087013594506040870135935060608701356125eb8161259c565b9598949750929560808101359460a0909101359350915050565b600080600080600080600060e0888a03121561262057600080fd5b61262988612455565b965061263760208901612455565b9550604088013594506060880135935060808801356126558161259c565b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561268557600080fd5b61268e83612455565b915061269c60208401612455565b90509250929050565b600080604083850312156126b857600080fd5b6126c183612455565b9150602083013563ffffffff811681146126da57600080fd5b809150509250929050565b600181811c908216806126f957607f821691505b6020821081141561168757634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156127435761274361271a565b500190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561277057600080fd5b81516106ef8161259c565b60008282101561278d5761278d61271a565b500390565b805160208083015191908110156116875760001960209190910360031b1b16919050565b6000602082840312156127c857600080fd5b815180151581146106ef57600080fd5b634e487b7160e01b600052601260045260246000fd5b60008261280b57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b600082516128388184602087016123ea565b919091019291505056fea26469706673582212205041a0fee199de8d3dd161ed2ac24147f679ac882ac956624a559173078f6b2a64736f6c63430008090033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MyToken";
  }

  deploy(
    wrappedToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyToken> {
    return super.deploy(wrappedToken, overrides || {}) as Promise<MyToken>;
  }
  getDeployTransaction(
    wrappedToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(wrappedToken, overrides || {});
  }
  attach(address: string): MyToken {
    return super.attach(address) as MyToken;
  }
  connect(signer: Signer): MyToken__factory {
    return super.connect(signer) as MyToken__factory;
  }
  static readonly contractName: "MyToken";
  public readonly contractName: "MyToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new utils.Interface(_abi) as MyTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyToken {
    return new Contract(address, _abi, signerOrProvider) as MyToken;
  }
}
